
import React from 'react';
import { Dialog, DialogContent, DialogHeader, DialogTitle } from "@/components/ui/dialog";
import { Button } from "@/components/ui/button";
import { Badge } from "@/components/ui/badge";
import { Separator } from "@/components/ui/separator";
import { Download, X } from "lucide-react";
import jsPDF from 'jspdf';

interface Application {
  id: number;
  title: string;
  type: string;
  status: string;
  submittedDate: string;
  lastUpdate: string;
  progress: number;
  nextAction: string;
  applicationNumber: string;
  estimatedCompletion: string;
}

interface ViewApplicationModalProps {
  open: boolean;
  onClose: () => void;
  application: Application | null;
}

const ViewApplicationModal = ({ open, onClose, application }: ViewApplicationModalProps) => {
  if (!application) return null;

  // Mock user details
  const userDetails = {
    name: "Rural Citizen",
    place: "Hyderabad, Telangana",
    age: 45,
    gender: "Male",
    aadhaar: "1234-5678-9012",
    phone: "+91 9876543210",
    email: "rural.citizen@example.com"
  };

  const generatePDF = () => {
    const doc = new jsPDF();
    
    // Header
    doc.setFontSize(20);
    doc.setTextColor(40, 40, 40);
    doc.text('GramaBot Application Receipt', 20, 30);
    
    // Application details
    doc.setFontSize(16);
    doc.text('Application Details', 20, 50);
    
    doc.setFontSize(12);
    doc.text(`Application Title: ${application.title}`, 20, 65);
    doc.text(`Application Number: ${application.applicationNumber}`, 20, 75);
    doc.text(`Type: ${application.type}`, 20, 85);
    doc.text(`Status: ${application.status}`, 20, 95);
    doc.text(`Submitted Date: ${new Date(application.submittedDate).toLocaleDateString()}`, 20, 105);
    doc.text(`Last Update: ${new Date(application.lastUpdate).toLocaleDateString()}`, 20, 115);
    doc.text(`Next Action: ${application.nextAction}`, 20, 125);
    doc.text(`Estimated Completion: ${application.estimatedCompletion}`, 20, 135);
    
    // User details
    doc.setFontSize(16);
    doc.text('Applicant Details', 20, 155);
    
    doc.setFontSize(12);
    doc.text(`Name: ${userDetails.name}`, 20, 170);
    doc.text(`Place: ${userDetails.place}`, 20, 180);
    doc.text(`Age: ${userDetails.age}`, 20, 190);
    doc.text(`Gender: ${userDetails.gender}`, 20, 200);
    doc.text(`Aadhaar: ${userDetails.aadhaar}`, 20, 210);
    doc.text(`Phone: ${userDetails.phone}`, 20, 220);
    doc.text(`Email: ${userDetails.email}`, 20, 230);
    
    // Footer
    doc.setFontSize(10);
    doc.text('Generated by GramaBot - Government Services Portal', 20, 270);
    doc.text(`Generated on: ${new Date().toLocaleString()}`, 20, 280);
    
    doc.save(`${application.applicationNumber}_receipt.pdf`);
  };

  const getStatusColor = (status: string) => {
    switch (status) {
      case 'approved': return 'bg-green-500';
      case 'in-progress': return 'bg-blue-500';
      case 'pending': return 'bg-yellow-500';
      case 'rejected': return 'bg-red-500';
      default: return 'bg-gray-500';
    }
  };

  return (
    <Dialog open={open} onOpenChange={onClose}>
      <DialogContent className="max-w-2xl max-h-[80vh] overflow-y-auto">
        <DialogHeader>
          <div className="flex items-center justify-between">
            <DialogTitle className="text-2xl font-bold text-gray-800">
              Application Details
            </DialogTitle>
            <Button variant="ghost" size="icon" onClick={onClose}>
              <X className="h-4 w-4" />
            </Button>
          </div>
        </DialogHeader>

        <div className="space-y-6">
          {/* GramaBot Header */}
          <div className="text-center bg-gradient-to-r from-orange-500 to-green-500 text-white p-4 rounded-lg">
            <h2 className="text-xl font-bold">GramaBot</h2>
            <p className="text-sm opacity-90">Government Services Portal</p>
          </div>

          {/* Application Information */}
          <div className="bg-gray-50 p-4 rounded-lg">
            <h3 className="text-lg font-semibold mb-3 text-gray-800">Application Information</h3>
            <div className="grid grid-cols-2 gap-4">
              <div>
                <label className="text-sm font-medium text-gray-600">Title</label>
                <p className="text-gray-800">{application.title}</p>
              </div>
              <div>
                <label className="text-sm font-medium text-gray-600">Application Number</label>
                <p className="text-gray-800 font-mono">{application.applicationNumber}</p>
              </div>
              <div>
                <label className="text-sm font-medium text-gray-600">Type</label>
                <p className="text-gray-800">{application.type}</p>
              </div>
              <div>
                <label className="text-sm font-medium text-gray-600">Status</label>
                <Badge className={`${getStatusColor(application.status)} text-white`}>
                  {application.status.charAt(0).toUpperCase() + application.status.slice(1)}
                </Badge>
              </div>
              <div>
                <label className="text-sm font-medium text-gray-600">Submitted Date</label>
                <p className="text-gray-800">{new Date(application.submittedDate).toLocaleDateString()}</p>
              </div>
              <div>
                <label className="text-sm font-medium text-gray-600">Last Update</label>
                <p className="text-gray-800">{new Date(application.lastUpdate).toLocaleDateString()}</p>
              </div>
              <div>
                <label className="text-sm font-medium text-gray-600">Next Action</label>
                <p className="text-gray-800">{application.nextAction}</p>
              </div>
              <div>
                <label className="text-sm font-medium text-gray-600">Estimated Completion</label>
                <p className="text-gray-800">{application.estimatedCompletion}</p>
              </div>
            </div>
          </div>

          <Separator />

          {/* Applicant Details */}
          <div className="bg-blue-50 p-4 rounded-lg">
            <h3 className="text-lg font-semibold mb-3 text-gray-800">Applicant Details</h3>
            <div className="grid grid-cols-2 gap-4">
              <div>
                <label className="text-sm font-medium text-gray-600">Name</label>
                <p className="text-gray-800">{userDetails.name}</p>
              </div>
              <div>
                <label className="text-sm font-medium text-gray-600">Place</label>
                <p className="text-gray-800">{userDetails.place}</p>
              </div>
              <div>
                <label className="text-sm font-medium text-gray-600">Age</label>
                <p className="text-gray-800">{userDetails.age}</p>
              </div>
              <div>
                <label className="text-sm font-medium text-gray-600">Gender</label>
                <p className="text-gray-800">{userDetails.gender}</p>
              </div>
              <div>
                <label className="text-sm font-medium text-gray-600">Aadhaar Number</label>
                <p className="text-gray-800 font-mono">{userDetails.aadhaar}</p>
              </div>
              <div>
                <label className="text-sm font-medium text-gray-600">Phone</label>
                <p className="text-gray-800">{userDetails.phone}</p>
              </div>
              <div className="col-span-2">
                <label className="text-sm font-medium text-gray-600">Email</label>
                <p className="text-gray-800">{userDetails.email}</p>
              </div>
            </div>
          </div>

          {/* Actions */}
          <div className="flex justify-end space-x-3 pt-4">
            <Button variant="outline" onClick={onClose}>
              Close
            </Button>
            <Button onClick={generatePDF} className="bg-gradient-to-r from-blue-500 to-purple-500 hover:from-blue-600 hover:to-purple-600">
              <Download className="w-4 h-4 mr-2" />
              Download PDF
            </Button>
          </div>
        </div>
      </DialogContent>
    </Dialog>
  );
};

export default ViewApplicationModal;
